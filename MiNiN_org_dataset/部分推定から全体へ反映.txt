[■YOLOと同じ条件で学習でききているか否か判断が必要だ]
                    YOLO    MININ
入力画像サイズ       448      128
出力特徴サイズ        11        1
出力特徴サイズ当り    56      128

以上から、YOLOとMININは同じ条件では学習できていない

[■入力画像サイズとカメラ画像サイズ]
カメラ画像サイズは現在、VGA(640x480)
NN入力画像サイズは現在、128x128、FPGA制約からこれ以上は難しい

[■ランダムクロップ]
・YOLOの出力特徴サイズは、11x11なので出力特徴の1ピクセルは、
　NN入力画像サイズの一部分(56x56ピクセル)だけから計算される

・YOLOの1回の推定計算は、出力特徴サイズである11x11ピクセルの推定をパラレルに計算

・MININでは、パラレル計算をシリアルに分けて実現する

・アルゴ
　カメラ画像を一旦縮小 (640,480) ⇒ (210,160)
　縮小した画像からNN入力画像サイズ(128,128)領域をランダムにクロップ
　クロップした画像を推定計算
　推定結果はクロップした画像に関するものなので、カメラ画像サイズでの推定値に再計算

[■ランダムクロップを適用すると]
・128x128へのクロップは、デジタルズームと同等
　局所をズームした画像の特徴量抽出は学習データにないものも出てくる
　例えば、どアップになった服とか椅子とか
　ズームの影響かもしれないが、誤認識率が高くなった
・ランダムクロップ画像を学習にも導入することで回避できるか？
・ランダムクロップの位置の分布を変えることで回避できるか？
　画像全体を平均的にクロップする
　対象を発見したらその辺りを重点的にクロップする
　対象が消滅したら平均的クロップに戻す

[■結果]
・2対象物まで追跡が可能
・対象物の画像に占める割合が小さい場合でも追跡が可能
