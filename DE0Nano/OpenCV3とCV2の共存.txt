OpenCV3系を利用したサンプルが多くなることは必須
だが、CV3系とCV2.4系は互換性が無いことが多く、既存コードが動かなくなる
これを避けるために、CV3とCV2.4を共存させる

[■参照]
http://d.hatena.ne.jp/taksei/20160903/1472875112
とか
http://code.litomisky.com/2014/03/09/how-to-have-multiple-versions-of-the-same-library-side-by-side/

[■OpenCV3インストール・ディレクトリを専用に作ってそこへインストール]
# cmake -D CMAKE_INSTALL_PREFIX=~/win_shared/libs/opencv-3.2.0/release/installed \
-D CMAKE_BUILD_TYPE=RELEASE \
-D WITH_TBB=ON \
-D BUILD_NEW_PYTHON_SUPPORT=ON \
-D WITH_V4L=ON \
-D WITH_FFMPEG=OFF \
-D BUILD_opencv_python2=ON ..

# make install
...
Read-only file system Error 2 うぎゃ〜;-< sharedダメなのねぇ
~/libs/以下で

以上でFSは終了して以下に最終結果をまとめる

[■移植本作業]
ここ参照でUbuntu14.04とOpenCV3.2+Contrib]
http://sakitama-lab.com/2017/01/19/opencv3-2contrib%E3%82%92ubuntu%E3%81%AB%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/

"contribとはOpenCVの拡張機能でSIFTやSURF何かを使うために必要です"
とある:-)

sudo apt-get update
sudo apt-get install build-essential
sudo apt-get install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
sudo apt-get install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev
足りてるみたいで、なんもインストールされん

git clone https://github.com/Itseez/opencv.git
git clone https://github.com/Itseez/opencv_contrib.git
cloneできた

cd ~/opencv
mkdir build
cd build

"contribをインストールするためにcmakeでcontribをダウンロードしたディレクトリを指定します"
だって:-) cmake!

# cmake \
-D CMAKE_INSTALL_PREFIX=~/libs/opencv-3.2.0/release/installed \
-D OPENCV_EXTRA_MODULES_PATH=~/libs/opencv_contrib/modules    \
-D CMAKE_BUILD_TYPE=RELEASE                                   \
-D WITH_TBB=ON                                                \
-D BUILD_NEW_PYTHON_SUPPORT=OFF                               \
-D WITH_V4L=ON                                                \
-D WITH_FFMPEG=ON                                             \
-D BUILD_opencv_python2=OFF ..

でcontribを取込み、Python API系は止め、FFMEPEGをサポート
結果cmakeのログは、

-- Found VTK ver. 5.8.0 (usefile: /usr/lib/vtk-5.8/UseVTK.cmake)
-- Caffe:   NO
-- Protobuf:   NO
-- Glog:   NO
-- Module opencv_dnn_modern disabled because CMake version is less than 3.2
-- freetype2:   YES
-- harfbuzz:    YES
-- Could NOT find HDF5 (missing:  HDF5_LIBRARIES HDF5_INCLUDE_DIRS) 
-- No preference for use of exported gflags CMake configuration set, and no hints for include/library directories provided. Defaulting to preferring an installed/exported gflags CMake configuration if available.
-- Failed to find installed gflags CMake configuration, searching for gflags build directories exported with CMake.
-- Failed to find gflags - Failed to find an installed/exported CMake configuration for gflags, will perform search for installed gflags components.
-- Failed to find gflags - Could not find gflags include directory, set GFLAGS_INCLUDE_DIR to directory containing gflags/gflags.h
-- Failed to find glog - Could not find glog include directory, set GLOG_INCLUDE_DIR to directory containing glog/logging.h
-- Module opencv_sfm disabled because the following dependencies are not found: Glog/Gflags
-- Torch importer has been enabled. To run the tests you have to install Torch ('th' executable should be available) and generate testdata using opencv_extra/testdata/dnn/generate_torch_models.py script.
-- freetype2:   YES
-- harfbuzz:    YES
-- checking for modules 'tesseract;lept'
--   package 'tesseract' not found
--   package 'lept' not found
-- Tesseract:   NO
-- 
-- General configuration for OpenCV 3.2.0-dev =====================================
--   Version control:               3.2.0-774-g9fa90c8
-- 
--   Extra modules:
--     Location (extra):            /home/ogura/libs/opencv_contrib/modules
--     Version control (extra):     3.2.0-289-g09b73b2
-- 
--   Platform:
--     Timestamp:                   2017-06-15T04:54:29Z
--     Host:                        Linux 3.13.0-24-generic x86_64
--     CMake:                       2.8.12.2
--     CMake generator:             Unix Makefiles
--     CMake build tool:            /usr/bin/make
--     Configuration:               RELEASE
-- 
--   CPU/HW features:
--     Baseline:                    SSE SSE2 SSE3
--       requested:                 SSE3
--     Dispatched code generation:  SSE4_1 FP16 AVX AVX2
--       requested:                 SSE4_1 AVX FP16 AVX2
--       SSE4_1 (0 files):          + SSSE3 SSE4_1
--       FP16 (1 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 AVX
--       AVX (1 files):             + SSSE3 SSE4_1 POPCNT SSE4_2 AVX
--       AVX2 (1 files):            + SSSE3 SSE4_1 POPCNT SSE4_2 FP16 FMA3 AVX AVX2
-- 
--   C/C++:
--     Built as dynamic libs?:      YES
--     C++ Compiler:                /usr/bin/c++  (ver 4.8.4)
--     C++ flags (Release):         -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG  -DNDEBUG
--     C++ flags (Debug):           -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wundef -Winit-self -Wpointer-arith -Wshadow -Wsign-promo -Wno-narrowing -Wno-delete-non-virtual-dtor -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -fvisibility=hidden -fvisibility-inlines-hidden -g  -O0 -DDEBUG -D_DEBUG
--     C Compiler:                  /usr/bin/cc
--     C flags (Release):           -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wno-narrowing -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -fvisibility=hidden -O3 -DNDEBUG  -DNDEBUG
--     C flags (Debug):             -fsigned-char -W -Wall -Werror=return-type -Werror=non-virtual-dtor -Werror=address -Werror=sequence-point -Wformat -Werror=format-security -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wundef -Winit-self -Wpointer-arith -Wshadow -Wno-narrowing -Wno-comment -fdiagnostics-show-option -Wno-long-long -pthread -fomit-frame-pointer -ffunction-sections  -msse -msse2 -msse3 -fvisibility=hidden -g  -O0 -DDEBUG -D_DEBUG
--     Linker flags (Release):      
--     Linker flags (Debug):        
--     ccache:                      NO
--     Precompiled headers:         YES
--     Extra dependencies:          /usr/lib/x86_64-linux-gnu/libpng.so /usr/lib/x86_64-linux-gnu/libz.so /usr/lib/x86_64-linux-gnu/libtiff.so /usr/lib/x86_64-linux-gnu/libjasper.so /usr/lib/x86_64-linux-gnu/libjpeg.so /usr/lib/x86_64-linux-gnu/libImath.so /usr/lib/x86_64-linux-gnu/libIlmImf.so /usr/lib/x86_64-linux-gnu/libIex.so /usr/lib/x86_64-linux-gnu/libHalf.so /usr/lib/x86_64-linux-gnu/libIlmThread.so gtk-x11-2.0 gdk-x11-2.0 atk-1.0 gio-2.0 pangoft2-1.0 pangocairo-1.0 gdk_pixbuf-2.0 cairo pango-1.0 fontconfig gobject-2.0 glib-2.0 gthread-2.0 gstbase-0.10 gstreamer-0.10 gmodule-2.0 xml2 gstvideo-0.10 gstapp-0.10 gstriff-0.10 gstpbutils-0.10 dc1394 avcodec avformat avutil swscale vtkCommon vtkFiltering vtkImaging vtkGraphics vtkGenericFiltering vtkIO vtkRendering vtkVolumeRendering vtkHybrid vtkWidgets vtkParallel vtkInfovis vtkGeovis vtkViews vtkCharts freetype harfbuzz dl m pthread rt /usr/lib/libtbb.so
--     3rdparty dependencies:
-- 
--   OpenCV modules:
--     To be built:                 core flann imgproc ml objdetect phase_unwrapping photo plot reg surface_matching video viz xphoto bgsegm dnn face freetype fuzzy imgcodecs shape videoio xobjdetect highgui superres ts bioinspired dpm features2d line_descriptor saliency text calib3d ccalib datasets rgbd stereo structured_light tracking videostab xfeatures2d ximgproc aruco java optflow stitching
--     Disabled:                    python2 world contrib_world
--     Disabled by dependency:      -
--     Unavailable:                 cudaarithm cudabgsegm cudacodec cudafeatures2d cudafilters cudaimgproc cudalegacy cudaobjdetect cudaoptflow cudastereo cudawarping cudev python3 cnn_3dobj cvv dnn_modern hdf matlab sfm
-- 
--   GUI: 
--     QT:                          NO
--     GTK+ 2.x:                    YES (ver 2.24.23)
--     GThread :                    YES (ver 2.40.2)
--     GtkGlExt:                    NO
--     OpenGL support:              NO
--     VTK support:                 YES (ver 5.8.0)
-- 
--   Media I/O: 
--     ZLib:                        /usr/lib/x86_64-linux-gnu/libz.so (ver 1.2.8)
--     JPEG:                        /usr/lib/x86_64-linux-gnu/libjpeg.so (ver )
--     WEBP:                        build (ver encoder: 0x020e)
--     PNG:                         /usr/lib/x86_64-linux-gnu/libpng.so (ver 1.2.50)
--     TIFF:                        /usr/lib/x86_64-linux-gnu/libtiff.so (ver 42 - 4.0.3)
--     JPEG 2000:                   /usr/lib/x86_64-linux-gnu/libjasper.so (ver 1.900.1)
--     OpenEXR:                     /usr/lib/x86_64-linux-gnu/libImath.so /usr/lib/x86_64-linux-gnu/libIlmImf.so /usr/lib/x86_64-linux-gnu/libIex.so /usr/lib/x86_64-linux-gnu/libHalf.so /usr/lib/x86_64-linux-gnu/libIlmThread.so (ver 1.6.1)
--     GDAL:                        NO
--     GDCM:                        NO
-- 
--   Video I/O:
--     DC1394 1.x:                  NO
--     DC1394 2.x:                  YES (ver 2.2.1)
--     FFMPEG:                      YES
--       avcodec:                   YES (ver 54.35.1)
--       avformat:                  YES (ver 54.20.4)
--       avutil:                    YES (ver 52.3.0)
--       swscale:                   YES (ver 2.1.1)
--       avresample:                NO
--     GStreamer:                   
--       base:                      YES (ver 0.10.36)
--       video:                     YES (ver 0.10.36)
--       app:                       YES (ver 0.10.36)
--       riff:                      YES (ver 0.10.36)
--       pbutils:                   YES (ver 0.10.36)
--     OpenNI:                      NO
--     OpenNI PrimeSensor Modules:  NO
--     OpenNI2:                     NO
--     PvAPI:                       NO
--     GigEVisionSDK:               NO
--     Aravis SDK:                  NO
--     UniCap:                      NO
--     UniCap ucil:                 NO
--     V4L/V4L2:                    NO/YES
--     XIMEA:                       NO
--     Xine:                        NO
--     gPhoto2:                     NO
-- 
--   Parallel framework:            TBB (ver 4.2 interface 7000)
-- 
--   Other third-party libraries:
--     Use Intel IPP:               2017.0.2 [2017.0.2]
--                at:               /home/ogura/libs/opencv/build/3rdparty/ippicv/ippicv_lnx
--     Use Intel IPP IW:            prebuilt binaries (2017.0.2)
--     Use Intel IPP Async:         NO
--     Use VA:                      NO
--     Use Intel VA-API/OpenCL:     NO
--     Use Lapack:                  NO
--     Use Eigen:                   YES (ver 3.2.0)
--     Use Cuda:                    NO
--     Use OpenCL:                  YES
--     Use OpenVX:                  NO
--     Use custom HAL:              NO
-- 
--   OpenCL:                        <Dynamic loading of OpenCL library>
--     Include path:                /home/ogura/libs/opencv/3rdparty/include/opencl/1.2
--     Use AMDFFT:                  NO
--     Use AMDBLAS:                 NO
-- 
--   Python 2:
--     Interpreter:                 /usr/bin/python2.7 (ver 2.7.6)
-- 
--   Python 3:
--     Interpreter:                 /usr/bin/python3.4 (ver 3.4)
-- 
--   Python (for build):            /usr/bin/python2.7
-- 
--   Java:
--     ant:                         /usr/bin/ant (ver 1.9.3)
--     JNI:                         /usr/lib/jvm/default-java/include /usr/lib/jvm/default-java/include /usr/lib/jvm/default-java/include
--     Java wrappers:               YES
--     Java tests:                  YES
-- 
--   Matlab:                        Matlab not found or implicitly disabled
-- 
--   Documentation:
--     Doxygen:                     NO
-- 
--   Tests and samples:
--     Tests:                       YES
--     Performance tests:           YES
--     C/C++ Examples:              NO
-- 
--   Install path:                  /home/ogura/libs/opencv-3.2.0/release/installed
-- 
--   cvconfig.h is in:              /home/ogura/libs/opencv/build
-- -----------------------------------------------------------------
-- 
-- Configuring done
-- Generating done
-- Build files have been written to: /home/ogura/libs/opencv/build


うぉ〜。次、make -j4
# make -j4
... 1hくらい


[■pkg-configを分ける]
pkg-configは"*.pc"なるファイルを含むディレクトリを$PKG_CONFIG_PATHに列挙すると検索される
$PKG_CONFIG_PATHのデフォルトは/usr/lib/pkgconfigになっている
なので、makeで作られた
　build/unix-install/opencv.pc
を$PKG_CONFIG_PATHのどこかに置くことでpkg-config対応になるが、make installで置かれるのだろう
なので、

/usr/lib/pkg-config/opencv3.pc
として設定ファイルを置き、コンパイル時にOpenCV2とOpenCV3を分ける

[■*.pc置き場]
ちなみに、find /usr/lib -name \*.pcとすると、
 /usr/lib/pkgconfig/*.pc
 /usr/lib/openmpi/lib/pkgconfig/*.pc
 /usr/lib/x86_64-linux-gnu/pkgconfig/*.pc
などの*.pcが出てくるので、それらを
# export PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/lib/openmpi/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig
などでパスに載せると、
# pkg-config --libs gl
  -lGL
などになる

[■pythonでのOpenCV3とOpenCV2の使い分け?]
OpenCV3はPython3、OpenCV2はPython2と対応が決まっているらしい
OpenCV3のAPIがPython2では対応とれないためだろうか
で、OpenCV3ではpythonサポートを外し、C++だけから使おうこととした

そんで
# make install
うりゃぁ〜、、いっぱいコピーされた:-)

Python系のチェック、
# python
# import cv2
# cv2.__version__
'2.4.8'
OK！

pkg-configでopencv3をサポートする
# cp /usr/lib/x86_64-linux-gnu/pkgconfig/opencv.pc /usr/lib/pkgconfig/opencv2.pc
# cp ~/libs/opencv-3.2.0/release/installed/lib/pkgconfig/opencv.pc /usr/lib/pkgconfig/opencv3.pc
# ln -s /usr/lib/pkgconfig/opencv3.pc /usr/lib/pkgconfig/opnecv.pc
pkg-configのチェック、
# pkg-config --libs --cflags opencv
...
いい感じ、OK!

これでPython2.7からはOpencv2.4.8を使え、C/C++からはデフォルトでOpenCV3が使える(ハズ:-0)
C/C++からOpenCV2を使う場合は、pkg-config --libs --cflags opencv2となる

[■C/C++から]
~/libs/opencv/samples/cpp/image_sequence.cpp
を試す、Makefileは下記

CXX ?= g++
CXXFLAGS += -c -Wall $(shell pkg-config --cflags opencv)
LDFLAGS += $(shell pkg-config --libs --static opencv)

all: image_sequence
image_sequence: image_sequence.o
	$(CXX) $< -o $@ $(LDFLAGS)
%.o: %.cpp; $(CXX) $< -o $@ $(CXXFLAGS)
clean: ; rm -f image_sequence.o image_sequence

# make
# ./image_sequence demo720.avi
Good!:-o)
